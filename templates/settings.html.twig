<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Control Panel</title>
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <style>
        /* Stylizacja przycisków bez użycia ikon Bootstrap */
        .btn-icon {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            font-size: 18px;
            line-height: 1;
        }
    </style>
    <script>
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function showPosition(position) {
            document.getElementById("latitude").value = position.coords.latitude;
            document.getElementById("longitude").value = position.coords.longitude;
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        }

        function showContent(section) {
            const sections = document.querySelectorAll(".content-section");
            sections.forEach((sec) => (sec.style.display = "none"));
            document.getElementById(section).style.display = "block";

            const links = document.querySelectorAll(".list-group-item");
            links.forEach((link) => link.classList.remove("active"));
            document.querySelector(`[onclick="showContent('${section}')"]`).classList.add("active");

            // Aktualizuj URL z parametrem "tab"
            const newUrl = new URL(window.location.href);
            newUrl.searchParams.set("tab", section);
            window.history.replaceState(null, "", newUrl);
        }

        document.addEventListener("DOMContentLoaded", function () {
            const urlParams = new URLSearchParams(window.location.search);
            const section = urlParams.get("tab") || "location-settings";
            showContent(section); // Domyślnie pokaż ustawienia lokalizacji
        });
    </script>
</head>
<body>
<div class="container mt-5">
    <div class="row">
        <div class="col-md-3">
            <div class="list-group">
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('location-settings')"
                >
                    Location Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('solar-settings')"
                >
                    SolarEdge
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('email-settings')"
                >
                    Email Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('google-settings')"
                >
                    Google Calendar Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('spotify-settings')"
                >
                    Spotify Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('countdown-settings')"
                >
                    Countdown Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('layout-settings')"
                >
                    Layout Settings
                </a>
                <a
                        href="#"
                        class="list-group-item list-group-item-action"
                        onclick="showContent('timezone-settings')"
                >
                    Timezone Settings
                </a>
            </div>
        </div>
        <div class="col-md-9">
            <div id="location-settings" class="content-section">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>Set Your Location</h3>
                    </div>
                    <div class="card-body">
                        <form method="POST" action="/set-location">
                            <div class="mb-3">
                                <label for="city" class="form-label">City (optional)</label>
                                <input
                                        type="text"
                                        class="form-control"
                                        id="city"
                                        name="city"
                                        placeholder="Enter city name"
                                        list="city-list"
                                />
                                <datalist id="city-list">
                                    <!-- Dynamicznie wygenerowane opcje miast -->
                                </datalist>
                                <div class="form-text">
                                    Enter the city name or use GPS for auto-detection.
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="latitude" class="form-label">Latitude</label>
                                <input
                                        type="text"
                                        class="form-control"
                                        id="latitude"
                                        name="latitude"
                                        placeholder="Auto-filled by GPS or Selected City"
                                        value="{% if location %} {{ location.lat }} {% endif %}"
                                        readonly
                                />
                            </div>
                            <div class="mb-3">
                                <label for="longitude" class="form-label">Longitude</label>
                                <input
                                        type="text"
                                        class="form-control"
                                        id="longitude"
                                        name="longitude"
                                        placeholder="Auto-filled by GPS or Selected City"
                                        value="{% if location %} {{ location.leng }} {% endif %}"
                                        readonly
                                />
                            </div>
                            <div class="d-flex justify-content-between">
                                <button
                                        type="button"
                                        onclick="getLocation()"
                                        class="btn btn-primary"
                                >
                                    <i class="fas fa-map-marker-alt"></i> Use GPS Location
                                </button>
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i> Save Location
                                </button>
                            </div>
                        </form>
                    </div>
                    <div class="card-footer text-muted text-center">
                        <small>
                            Your location data will be stored securely and used to fetch
                            the weather forecast.
                        </small>
                    </div>
                </div>
            </div>

            <div id="google-settings" class="content-section" style="display: none">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>Google Calendar Settings</h3>
                    </div>
                    <div class="card-body text-center">
                        {% if not googleSettings %}
                            <a href="{{ path('google-login') }}" class="btn btn-success">
                                Connect to Google Calendar
                            </a>
                        {% else %}
                            <a href="{{ path('google-remove-calendar') }}" class="btn btn-danger">
                                Disconnect from Google Calendar
                            </a>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div id="email-settings" class="content-section" style="display: none">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>Email Account Settings</h3>
                    </div>
                    <div class="card-body">
                        {% if not emailSettings %}
                            <form method="POST" action="/email-settings">
                                <h5>IMAP Settings</h5>
                                <div class="mb-3">
                                    <label for="imap_server" class="form-label">IMAP Server</label>
                                    <input
                                            type="text"
                                            class="form-control"
                                            id="imap_server"
                                            name="imap_server"
                                            required
                                            placeholder="e.g., imap.gmail.com"
                                    />
                                </div>
                                <div class="mb-3">
                                    <label for="imap_port" class="form-label">IMAP Port</label>
                                    <input
                                            type="number"
                                            class="form-control"
                                            id="imap_port"
                                            name="imap_port"
                                            required
                                            placeholder="e.g., 993"
                                    />
                                </div>
                                <div class="mb-3">
                                    <label for="imap_username" class="form-label">IMAP Username</label>
                                    <input
                                            type="text"
                                            class="form-control"
                                            id="imap_username"
                                            name="imap_username"
                                            required
                                            placeholder="Your IMAP username"
                                    />
                                </div>
                                <div class="mb-3">
                                    <label for="imap_password" class="form-label">IMAP Password</label>
                                    <input
                                            type="password"
                                            class="form-control"
                                            id="imap_password"
                                            name="imap_password"
                                            required
                                            placeholder="Your IMAP password"
                                    />
                                </div>

                                <div class="d-flex justify-content-between">
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-save"></i> Save Email Settings
                                    </button>
                                </div>
                            </form>
                        {% else %}
                            <form action="{{ path('delete-email') }}" method="post"
                                  style="margin-top: 15px">
                                <button type="submit" class="btn btn-danger">
                                    Remove Email Account
                                </button>
                            </form>
                        {% endif %}
                    </div>
                    <div class="card-footer text-muted text-center">
                        <small>Your email settings will be used to fetch unread messages and display recent
                            emails.</small>
                    </div>
                </div>
            </div>

            <div id="solar-settings" class="content-section" style="display: none">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>SolarEdge API Key Settings</h3>
                    </div>
                    <div class="card-body">
                        {% if not solarEdgeSettings %}
                            <form method="POST" action="/solar-edge">
                                <div class="mb-3">
                                    <label for="api_key" class="form-label">SolarEdge API Key</label>
                                    <input
                                            type="password"
                                            class="form-control"
                                            id="api_key"
                                            name="api_key"
                                            required
                                            placeholder="Enter your SolarEdge API key"
                                    />
                                </div>
                                <div class="mb-3">
                                    <label for="site_id" class="form-label">Site ID</label>
                                    <input
                                            type="text"
                                            class="form-control"
                                            id="site_id"
                                            name="site_id"
                                            required
                                            placeholder="Enter your SolarEdge site ID"
                                    />
                                </div>
                                <div class="d-flex justify-content-between">
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-save"></i> Save API Key
                                    </button>
                                </div>
                            </form>
                        {% else %}
                            <form method="POST" action="{{ path('delete-solar-edge') }}">
                                <button type="submit" class="btn btn-danger">
                                    Remove SolarEdge API Key
                                </button>
                            </form>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div id="spotify-settings" class="content-section" style="display: none">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>Spotify Settings</h3>
                    </div>
                    <div class="card-body">
                        {% if not spotifySettings %}
                            <form action="{{ path('spotify-login') }}" class="text-center">
                                <button type="submit" class="btn btn-success">
                                    Connect to Spotify
                                </button>
                            </form>
                        {% else %}
                            <form action="{{ path('spotify-logout') }}" class="text-center">
                                <button type="submit" class="btn btn-danger">
                                    Disconnect from Spotify
                                </button>
                            </form>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div id="countdown-settings" class="content-section" style="display: none">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white text-center">
                        <h3>Countdown Settings</h3>
                    </div>
                    <div class="card-body">
                        {% if not countDown %}
                            <form action="{{ path('setCountdown') }}" method="post">
                                <div class="mb-3">
                                    <label for="countdown_date" class="form-label
                                    ">Countdown Date</label>
                                    <input type="datetime-local" class="form-control" id="countdown_date"
                                           name="countdown_date" required>
                                </div>
                                <div class="mb-3">
                                    <label for="countdown_title" class="form-label
                                    ">Countdown Title</label>
                                    <input type="text" class="form-control" id="countdown_title" name="countdown_title"
                                           minlength="1" maxlength="18"
                                           required>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-save"></i> Save Countdown
                                    </button>
                                </div>
                            </form>
                        {% else %}
                            {% for countdown in countDown %}
                                <form action="{{ path('deleteCountdown') }}" method="post">
                                    <input type="hidden" name="countdown_id" value="{{ countdown.id }}">
                                    <button type="submit" class="btn btn-danger" style="margin-bottom: 5px">
                                        Remove Countdown {{ countdown.description }}
                                    </button>
                                </form>
                            {% endfor %}
                            {% if countDown|length < 2 %}
                                <form action="{{ path('setCountdown') }}" method="post" style="margin-top: 15px;">
                                    <div class="mb-3">
                                        <label for="countdown_date" class="form-label">Countdown Date</label>
                                        <input type="datetime-local" class="form-control" id="countdown_date"
                                               name="countdown_date" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="countdown_title" class="form-label">Countdown Title</label>
                                        <input type="text" class="form-control" id="countdown_title"
                                               name="countdown_title" minlength="1" maxlength="18" required>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <button type="submit" class="btn btn-success">
                                            <i class="fas fa-save"></i> Save Countdown
                                        </button>
                                    </div>
                                </form>
                            {% endif %}
                        {% endif %}
                    </div>
                </div>
            </div>

            <div id="timezone-settings" class="content-section" style="display: none">
                <form method="POST" action="{{ path('set-timezone') }}">
                    <div class="card shadow-lg">
                        <div class="card-header bg-primary text-white text-center">
                            <h3>Select Timezone</h3>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label for="timezone" class="form-label">Timezone</label>
                                <select class="form-select" id="timezone" name="timezone" required>
                                    <option value="">Select your timezone</option>
                                    {% for timezone in timeZones %}
                                        <option value="{{ timezone }}" {% if selectedTimezone == timezone %}selected{% endif %}>
                                            {{ timezone|replace({'_': ' '}) }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i> Save Timezone
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div id="layout-settings" class="content-section" style="display: none">
                <form method="POST" action="{{ path('set-layout') }}">
                    <div class="card shadow-lg mb-4">
                        <div class="card-header bg-primary text-white text-center">
                            <h3>Set Dashboard Layout</h3>
                        </div>
                        <div class="card-body">
                            <div id="dashboard-grid" class="row">
                                {% for i in 0..5 %}
                                    <div class="col-md-4 mb-4">
                                        <div class="card component-card">
                                            <div class="card-header text-center">
                                                <label for="component{{ i + 1 }}"
                                                       class="form-label">Component {{ i + 1 }}</label>
                                            </div>
                                            <div class="card-body">
                                                <div class="input-group mb-2">
                                                    <select class="form-select component-select-input"
                                                            id="component{{ i + 1 }}"
                                                            name="component{{ i + 1 }}" required>
                                                        <option value="">Select component</option>
                                                        {% for key, name in availableComponents %}
                                                            <option value="{{ key }}" {{ selectedComponents[i] == key ? 'selected' : '' }}>
                                                                {{ name }}
                                                            </option>
                                                        {% endfor %}
                                                    </select>
                                                </div>

                                                <label for="replacement{{ i + 1 }}" class="form-label mt-2">Replacement
                                                    for Component {{ i + 1 }}</label>
                                                <div class="input-group">
                                                    <select class="form-select replacement-select-input"
                                                            id="replacement{{ i + 1 }}"
                                                            name="replacement{{ i + 1 }}">
                                                        <option value="">No replacement</option>
                                                        {% for key, name in availableComponents %}
                                                            <option value="{{ key }}" {{ replacementLayout[i] == key ? 'selected' : '' }}>
                                                                {{ name }}
                                                            </option>
                                                        {% endfor %}
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>

                            <div class="text-center mt-3">
                                <button type="button" id="reset-layout" class="btn btn-outline-primary">
                                    &#43; Reset Layout
                                </button>
                            </div>

                            <div id="validation-message" class="text-danger mt-3" style="display: none;">
                                All fields must have a selected value and cannot be repeated in the main or replacement
                                fields.
                            </div>
                        </div>
                        <div class="card-footer text-center">
                            <button type="submit" class="btn btn-success">Save Layout</button>
                        </div>
                    </div>
                </form>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const dashboardGrid = document.getElementById('dashboard-grid');
                    const resetLayoutBtn = document.getElementById('reset-layout');
                    const validationMessage = document.getElementById('validation-message');

                    function updateSelectOptions() {
                        const mainSelects = document.querySelectorAll('.component-select-input');
                        const replacementSelects = document.querySelectorAll('.replacement-select-input');

                        const selectedMainValues = Array.from(mainSelects).map(select => select.value).filter(val => val !== '');
                        const selectedReplacementValues = Array.from(replacementSelects).map(select => select.value).filter(val => val !== '');

                        mainSelects.forEach(select => {
                            const currentValue = select.value;
                            Array.from(select.options).forEach(option => option.disabled = false);
                            selectedMainValues.forEach(value => {
                                if (value !== currentValue) {
                                    const optionToDisable = select.querySelector(`option[value="${value}"]`);
                                    if (optionToDisable) optionToDisable.disabled = true;
                                }
                            });
                        });

                        replacementSelects.forEach(select => {
                            const currentValue = select.value;
                            Array.from(select.options).forEach(option => option.disabled = false);
                            selectedMainValues.concat(selectedReplacementValues).forEach(value => {
                                if (value !== currentValue) {
                                    const optionToDisable = select.querySelector(`option[value="${value}"]`);
                                    if (optionToDisable) optionToDisable.disabled = true;
                                }
                            });
                        });
                    }

                    function validateForm() {
                        const mainSelects = document.querySelectorAll('.component-select-input');
                        const replacementSelects = document.querySelectorAll('.replacement-select-input');

                        const selectedMainValues = Array.from(mainSelects).map(select => select.value);
                        const selectedReplacementValues = Array.from(replacementSelects).map(select => select.value).filter(val => val !== '');

                        const allMainSelected = selectedMainValues.every(val => val !== '');
                        const uniqueMainValues = new Set(selectedMainValues);
                        const uniqueReplacementValues = new Set(selectedReplacementValues);

                        const allUniqueMain = uniqueMainValues.size === selectedMainValues.length;
                        const noOverlap = !selectedReplacementValues.some(val => uniqueMainValues.has(val));

                        if (!allMainSelected || !allUniqueMain || !noOverlap) {
                            validationMessage.style.display = 'block';
                            return false;
                        } else {
                            validationMessage.style.display = 'none';
                            return true;
                        }
                    }

                    updateSelectOptions();

                    dashboardGrid.addEventListener('change', function (e) {
                        if (e.target && (e.target.classList.contains('component-select-input') || e.target.classList.contains('replacement-select-input'))) {
                            updateSelectOptions();
                            validateForm();
                        }
                    });

                    resetLayoutBtn.addEventListener('click', function () {
                        if (confirm('Are you sure you want to reset the layout?')) {
                            const mainSelects = document.querySelectorAll('.component-select-input');
                            const replacementSelects = document.querySelectorAll('.replacement-select-input');

                            mainSelects.forEach(select => select.value = '');
                            replacementSelects.forEach(select => select.value = '');
                            updateSelectOptions();
                            validateForm();
                        }
                    });

                    document.querySelector('form').addEventListener('submit', function (event) {
                        if (!validateForm()) {
                            event.preventDefault();
                            alert('Ensure all fields are filled and there are no duplicates.');
                        }
                    });
                });
            </script>


        </div>
    </div>
</div>
<script>
    let cities = [];

    // Wczytaj dane z pliku JSON
    fetch('/json/cities.json')
        .then(response => response.json())
        .then(data => {
            cities = data;
            populateCityList();
        })
        .catch(error => console.error('Błąd przy wczytywaniu danych:', error));

    // Wypełnij datalist miastami
    function populateCityList() {
        const cityList = document.getElementById('city-list');
        cities.forEach(city => {
            const option = document.createElement('option');
            option.value = city.name;
            cityList.appendChild(option);
        });
    }

    // Funkcja, która wypełni pola latitude i longitude na podstawie wybranego miasta
    document.getElementById('city').addEventListener('input', function () {
        const selectedCity = cities.find(city => city.name.toLowerCase() === this.value.toLowerCase());
        if (selectedCity) {
            document.getElementById('latitude').value = selectedCity.lat;
            document.getElementById('longitude').value = selectedCity.lng;
        }
    });

</script>
<script src="/js/bootstrap.bundle.min.js"></script>
</body>
</html>
